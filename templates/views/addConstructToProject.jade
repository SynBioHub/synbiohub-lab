
extends ../layouts/default.jade
include ../mixins/attachments.jade

block breadcrumbs
    ul
        li
            span.fa.fa-cloud-upload
            |  Construct Submission


block js
    script.
        interact('.draggable').draggable({
            inertia: true,
            restrict: {
            restriction: "parent",
            endOnly: true,
            elementRect: { top: 0, left: 0, bottom: 1, right: 1 }
            },
            autoScroll: true,
            // dragMoveListener from the dragging demo above
            onmove: dragMoveListener,
            });

        interact('.dropzone').dropzone({
            // only accept elements matching this CSS selector
            accept: '.draggable',
            // Require a 75% element overlap for a drop to be possible
            overlap: 0.75,

            // listen for drop related events:

            ondropactivate: function (event) {
                // add active dropzone feedback
                event.target.classList.add('drop-active');
            },
            ondragenter: function (event) {
                var draggableElement = event.relatedTarget,
                    dropzoneElement = event.target;

                // feedback the possibility of a drop
                dropzoneElement.classList.add('drop-target');
                draggableElement.classList.add('can-drop');
                draggableElement.textContent = 'Dragged in';
            },
            ondragleave: function (event) {
                // remove the drop feedback style
                event.target.classList.remove('drop-target');
                event.relatedTarget.classList.remove('can-drop');
                event.relatedTarget.textContent = 'Dragged out';
            },
            ondrop: function (event) {
                event.relatedTarget.textContent = 'Dropped';
                var input = document.createElement("input");
                input.type = 'hidden'
                input.name = 'draggableTest'
                input.value = 'test!'
                var form = document.getElementById("constructForm")
                form.appendChild(input)
            },
            ondropdeactivate: function (event) {
                // remove active dropzone feedback
                event.target.classList.remove('drop-active');
                event.target.classList.remove('drop-target');
            }
            });

        function dragMoveListener (event) {
            var target = event.target,
                // keep the dragged position in the data-x/data-y attributes
                x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx,
                y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;

            // translate the element
            target.style.webkitTransform =
            target.style.transform =
            'translate(' + x + 'px, ' + y + 'px)';

            // update the posiion attributes
            target.setAttribute('data-x', x);
            target.setAttribute('data-y', y);
        }

block content
    div.submission-container(align='center')
        div.submission-header
            span(style='font-size: 3.3em').fa.fa-cloud-upload
            p(style='font-size: 1.7em; font-weight: bolder')
                | Tell us about your construct!



            div.tab-content


            form(method='post',enctype='multipart/form-data')#constructForm
                        div

                            div(name='test').draggable#test
                                p
                                    | Drag me!

                            div.dropzone
                                p
                                    | HERE
                        if errors.length > 0

                            each error in errors
                                div.alert.alert-danger
                                    p #{error}
                                br

                        input(type="hidden", name="submitType", value="new")
                        div.row
                            div.col-md-12
                                div.form-group-100.required
                                    label(for="constructName") Construct Name 
                                        a(title='Every entry on SynBioHub has a name, including Constructs. Make sure to give a memorable and descriptive name for easier recognition.')
                                                    span.fa.fa-info-circle
                                    input.form-control(name='constructName',id="constructName",placeholder='The name of the built construct', value=constructName)

                        div.row
                            div.col-md-12
                                div.form-group-100.required
                                    label(for="agent") Design
                                        a(title='Placeholder Design Info Box Cause I Cant Think Of Anything')
                                                span.fa.fa-info-circle
                                    select.form-control(name='design', id="design")
                                            option(value='', selected='selected') The design this construct is derived from
                                            - for(var i=0;i< designs.length;i++) {
                                              option(value = [designs[i].uri]) #{designs[i].displayName}
                                            - }

                        div.row
                            div.col-md-12
                                div.form-group-100.required
                                    label(for="agent") Researcher 
                                        a(title='SynBioHub records information about provenance: who, what, where. Here, you need to fill out which user performed this specific Experiment.')
                                                span.fa.fa-info-circle
                                    select.form-control(name='agent', id="agent")
                                            option(value='', selected='selected') The name of the researcher who built the construct
                                            - for(var i=0;i< agentNames.length;i++) {
                                              option(value = [agentURIs[i],agentNames[i]]) #{agentNames[i]}
                                            - }
                        div.row
                            div.col-md-12
                                div.form-group-100.required
                                    label(for="description") Purpose 
                                        a(title='Writing the purpose of a built Construct is important for properly describing it.')
                                                span.fa.fa-info-circle
                                    input.form-control(name='description',id="description"
                                            placeholder='Brief description about the purpose of this construct',value=description)
                        div.row
                            div.col-md-12
                                div.form-group-100.required
                                    label(for="location") Physical Location 
                                        a(title='Noting the physical location of the built construct is useful information that SynBioHub stores.')
                                                span.fa.fa-info-circle
                                    input.form-control(name='location', id="location"
                                            placeholder='Physical location of the construct e.g. Fridge A, Tray 2', value=location)

                        div.row
                            div.col-md-12
                                div.form-group-100.required
                                    label(for="organism") Organism 
                                        a(title='SynBioHub will give suggestions as you write the organism name. It will also link the chosen organism with its NCBI taxonomy ID automatically.')
                                                span.fa.fa-info-circle
                                    input.form-control.organism-autocomplete(name='organism', id="organism"
                                            placeholder='Organism', value='')

                        div.row
                            div.col-md-12
                              div.form-group-100.required
                                    div
                                      label(for="agent") Lab Protocol Used 
                                        a(title='Lab Protocols are documents that contain a description of the steps performed in the lab. Using this checkbox, you can either create a new Lab Protocol, which will require you to give the protocol a name, and to upload a file e.g. a word document that describes it. You can also leave the checkbox blank, and use any of the already existing protocols.')
                                                span.fa.fa-info-circle
                                      input(type="checkbox", style='margin-left:50px', data-toggle='collapse', data-target='.collapseForm', id="ast1", name="plan_submission_type[]")
                                      |  Create a new Lab Protocol
              

                        div.row
                            div.col-md-12
                                div.form-group-100.required
                                    .collapseForm.panel-collapse.collapse.show
                                        .panel-body
                                        select.form-control(name='plan1', id="plan1")
                                                option(value='', selected='selected') Choose an existing Lab Protocol
                                                for plan in plans
                                                  option(value=[plan.uri, plan.name]) #{plan.name}
                                                


                        div.row
                                .collapseForm.panel-collapse.collapse
                                    .panel-body
                                        h4.panel-title
                                            a.accordion-toggle(data-toggle='collapse', href='#collapse')
                                        div.card.w-100
                                            div.card-header
                                                div.col-md-12
                                                         <b>Please upload a file describing the lab protocol</b>
                                          
                                            div.form-group-100.required
                                                input.form-control(name='plan2',id="plan2",placeholder='The name of the lab protocol used to build the design.', value=plan2)
                                          
                                            #collapse.panel-collapse
                                                .panel-body
                                                    div.row
                                                        div.col-md-12
                                                                div.row
                                                                        div.col
                                                                            div.input-group
                                                                                label.input-group-btn
                                                                                    span.btn.btn-primary
                                                                                        | Select file(s)&hellip;
                                                                                        input(type="file",name="file")
                                                                                input(type="text",class="form-control",readonly)
                                                                        div.col-xs-3
                        br

                        div.row
                            div.col-md-12
                                button(type='submit').btn.btn-primary.btn-lg Submit
